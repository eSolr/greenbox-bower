//
//  Defining grid variables and class manipaltig @mixins
//  NOR FOR DIRECT @IMPORT
//


//@import "esolr/variables";


//
//  Global grid variables
//

$generate-fluid-grid: true !global;

//  original grid syntax
//$es-grid-class-names: "wrap", "column", "full", "offset", "push", "pull", "last", "centered", "uncentered" !default;

//  foundation compatible grid syntax
//$foundation-syntax: ".row", ".column, .columns", "full", "offset-", "push-", "pull-", "last", "centered", "uncentered" !default;  // moved to _variables

//  setting foundation specific names
$es-grid-class-names: $es-grid-syntax !global;

//  default reading direction
$es-grid-direction: left !default;

//  Default grid: 12 column x 60px column width / 30px gutter
//$es-grid-columns: 12 !default;            // moved to _variables
//$es-grid-width: rem-calc(60px) !default;  // only for static grid
//$es-grid-gutter: rem-calc(30px) !default; // moved to _variables

//  default prefixes
$es-grid-prefix: "" !global;
$es-size-prefix: "_" !global;

//  defining default class names based on selected syntax
$es-wrap-class: nth($es-grid-class-names, 1) !global;
$es-column-class: nth($es-grid-class-names, 2) !global;
$es-full-width-class: nth($es-grid-class-names, 3) !global;
$es-offset-class: nth($es-grid-class-names, 4) !global;
$es-push-class: nth($es-grid-class-names, 5) !global;
$es-pull-class: nth($es-grid-class-names, 6) !global;
$es-last-class: nth($es-grid-class-names, 7) !global;
$es-centered-class: nth($es-grid-class-names, 8) !global;
$es-uncentered-class: nth($es-grid-class-names, 9) !global;


//
//  Reset values to avoid unexpected naming with media query
//

@mixin reset-grid-prefix {

	//  prefixes
	$es-grid-prefix: "" !global;
	$es-size-prefix: "_" !global;

	//  container classes
	$es-wrap-class: nth($es-grid-class-names, 1) !global;
	$es-column-class: nth($es-grid-class-names, 2) !global;

	//  size specific classes
	$es-full-width-class: nth($es-grid-class-names, 3) !global;
	$es-offset-class: nth($es-grid-class-names, 4) !global;
	$es-push-class: nth($es-grid-class-names, 5) !global;
	$es-pull-class: nth($es-grid-class-names, 6) !global;
	$es-last-class: nth($es-grid-class-names, 7) !global;
	$es-centered-class: nth($es-grid-class-names, 8) !global;
	$es-uncentered-class: nth($es-grid-class-names, 9) !global;
}


//
//  Beállítja a globális és méretfüggő class-okat.
//  A méret-specifikus class-ok kap(hat)nak megkülönböztetést, amivel
//  könnyen classozhatóvá válik html szinten minden.
//

@mixin set-grid-prefix($size-prefix: $es-size-prefix, $grid-prefix: $es-grid-prefix) {

	@include reset-grid-prefix;

	//  Refedining values
	//  Prefixes
	$es-size-prefix: $size-prefix !global;
	$es-grid-prefix: $grid-prefix !global;

	//  Container classes
	$es-wrap-class: $grid-prefix + $es-wrap-class !global;
	$es-column-class: $grid-prefix + $es-column-class !global;

	//  Size specific classes
	$es-full-width-class: $size-prefix + $grid-prefix + $es-full-width-class !global;
	$es-offset-class: $size-prefix + $grid-prefix + $es-offset-class !global;
	$es-push-class: $size-prefix + $grid-prefix + $es-push-class !global;
	$es-pull-class: $size-prefix + $grid-prefix + $es-pull-class !global;
	$es-last-class: $size-prefix + $grid-prefix + $es-last-class !global;
	$es-centered-class: $size-prefix + $grid-prefix + $es-centered-class !global;
	$es-uncentered-class: $size-prefix + $grid-prefix + $es-uncentered-class !global;
}
