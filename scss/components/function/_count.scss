//	@desc		Count type or value in a list – only in one (first) level
//	@name
//	@author		Armin
//	@requires	_logic.scss
//
//	todo		mentesíteni a logic.scss-től



// @functions:
// 	count($arg-count-list, $arg-count-value [, $arg-count-is_type: false !default])

//  A paraméterként átadott listában összegyűjti egy típus vagy érték előfordulásait egy szint mélységben.
// A kimenete:
// a talált eredmények előfordulásának index-szét külön listába gyűjti, különben false
// Ha a lista egy eleme lista, abban nem keres, azt típusként azonosítja
// Paraméterezése:
// $arg-count-list       a lista, amiben keresünk
// $arg-count-value      a keresett érték vagy típus
// $arg-count-is_type    [def: false][true][type] ha típusra keresünk, akkor ez true|"type"


@function count($arg-count-list, $arg-count-value, $arg-count-is_type: false) {
  $arg-count-counter: ();
  @if -and(-or($arg-count-is_type, $arg-count-is_type == "type"), -not(length($arg-count-list) == 0)) {
    @for $i from 1 through length($arg-count-list) {
      @if type-of(nth($arg-count-list, $i)) == $arg-count-value {
        $arg-count-counter: append($arg-count-counter, $i);
      }
    }
  }
  @else {
    @for $i from 1 through length($arg-count-list) {
      @if nth($arg-count-list, $i) == $arg-count-value {
        $arg-count-counter: append($arg-count-counter, $i);
      }
    }
  }
  //  Visszatérő érték
  @if length($arg-count-counter) != 0 {
    @return $arg-count-counter;
  }
  @else {
    @return false;
  }
}
